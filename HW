Javscript:

1.

123 == "123" результат - true, поскольку в JS оператор "==" сравнивает по содержимому, независимо от типа данных.

123 === "123" результат - false, поскольку в JS оператор "===" означает тождественное сравнение, и сравнивает зависимо от типа данных.

"" == false вернет true, поскольку при использовании оператора сравнения "==" пустая строка преобразовывается в 0, также как и булев оператор "false" интерпретируется как 0.

"" === false вернeт false, опять же, поскольку, в случае строгого сравнения разных типов данных, всегда будет "false".

"00000" == false результат - true, снова по содержимому.

"0000" === false результат - false - разные типы данных.

2.

1 + "12" - результат "112", число преобразуется в строку и выполнится конкатенация.

1 – "12" - результат -11, строка преобразуется в число, поскольку от числа строку отнять нельзя.

1 + "abv" - результат "1abv", снова конкатенация.

1 – "abv" - результат NaN, поскольку нельзя отнять от числа строку.

3.

(function (undefined) {
	undefined == null;
	undefined === null;
	undefined = ‘1’;
	console.log(undefined);
})();

В результате присваивания переменной единицы, в консоль будет выведена единица.

4.

function x() {
    var funcs = [];
    for (var i = 0; i < 10; i++) {
        funcs.push(function() { console.log(i); });
        }
    return funcs;
}
var counters = x();
counters[0]();
counters[3]();

Здесь в цикле формируется массив из 10 анонимных функций. Затем вызывается одна из анонимных функций массива funcs, который возвращает значение итератора i, которое на последней итерации равно 10. В результате counters[0](); - вернет 10, counters[3](); - вернет 10.

MySQL:

1. 

SELECT hdd, COUNT(*)
FROM pc
WHERE hdd = (SELECT MIN(hdd) from pc)
GROUP BY hdd

2.

SELECT id, (SELECT count(*) FROM tbl WHERE p_id = id) AS cnt 
FROM tbl ORDER BY id

3.

DELETE t1 FROM tbl t1, tbl t2 WHERE t1.value = t2.value AND t1.id > t2.id;
